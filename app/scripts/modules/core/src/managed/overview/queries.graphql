fragment detailedVersionFields on MdArtifactVersionInEnvironment {
  id
  buildNumber
  version
  createdAt
  status
  gitMetadata {
    commit
    author
    branch
    commitInfo {
      sha
      link
      message
    }
    pullRequest {
      number
      link
    }
    comparisonLinks {
      toPreviousVersion
      toCurrentVersion
    }
  }
  deployedAt
  lifecycleSteps {
    startedAt
    completedAt
    type
    status
    link
  }
  constraints {
    type
    status
    judgedBy
    judgedAt
    attributes
  }
  verifications {
    id
    type
    status
    startedAt
    completedAt
    link
  }
  postDeploy {
    id
    type
    status
    startedAt
    completedAt
    link
  }
  veto {
    vetoedBy
    vetoedAt
    comment
  }
}

fragment artifactPinnedVersionFields on MdArtifact {
  pinnedVersion {
    id
    version
    buildNumber
    pinnedAt
    pinnedBy
    comment
    gitMetadata {
      commitInfo {
        message
      }
    }
  }
}

query fetchApplication($appName: String!, $statuses: [MdArtifactStatusInEnvironment!]) {
  application(appName: $appName) {
    id
    name
    account
    environments {
      id
      name
      isPreview
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          versions(statuses: $statuses) {
            ...detailedVersionFields
          }
          ...artifactPinnedVersionFields
        }
        resources {
          id
          kind
          displayName
          moniker {
            app
            stack
            detail
          }
          location {
            account
            regions
          }
        }
      }
    }
  }
}

query fetchVersionsHistory($appName: String!, $limit: Int) {
  application(appName: $appName) {
    id
    name
    account
    environments {
      id
      name
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          versions(limit: $limit) {
            id
            buildNumber
            version
            createdAt
            status
            gitMetadata {
              commit
              author
              branch
              commitInfo {
                sha
                link
                message
              }
              pullRequest {
                number
                link
              }
            }
            lifecycleSteps {
              type
              status
            }
          }
          ...artifactPinnedVersionFields
        }
      }
    }
  }
}

query fetchPinnedVersions($appName: String!) {
  application(appName: $appName) {
    id
    name
    account
    environments {
      id
      name
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          ...artifactPinnedVersionFields
        }
      }
    }
  }
}

query fetchVersion($appName: String!, $versions: [String!]) {
  application(appName: $appName) {
    id
    name
    account
    environments {
      id
      name
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          versions(versions: $versions) {
            ...detailedVersionFields
          }
        }
      }
    }
  }
}

query fetchResourceStatus($appName: String!) {
  application(appName: $appName) {
    id
    name
    environments {
      id
      name
      state {
        id
        resources {
          id
          kind
          state {
            status
            reason
            event
          }
        }
      }
    }
  }
}

query fetchApplicationManagementStatus($appName: String!) {
  application(appName: $appName) {
    id
    name
    isPaused
  }
}

mutation UpdateConstraint($payload: MdConstraintStatusPayload!) {
  updateConstraintStatus(payload: $payload)
}

mutation ToggleManagement($application: String!, $isPaused: Boolean!) {
  toggleManagement(application: $application, isPaused: $isPaused)
}

mutation PinVersion($payload: MdArtifactVersionActionPayload!) {
  pinArtifactVersion(payload: $payload)
}

mutation UnpinVersion($payload: MdUnpinArtifactVersionPayload!) {
  unpinArtifactVersion(payload: $payload)
}

mutation MarkVersionAsBad($payload: MdArtifactVersionActionPayload!) {
  markArtifactVersionAsBad(payload: $payload)
}

mutation MarkVersionAsGood($payload: MdMarkArtifactVersionAsGoodPayload!) {
  markArtifactVersionAsGood(payload: $payload)
}
