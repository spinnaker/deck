@value white from "../colors.module.css";
@value belowMobileSize from "../breakpoints.module.css";
@value critical from "../layers.module.css";

@value blurEffect: saturate(1.3) blur(5px);

@value backdropColor: rgba(0, 0, 0, 0.7);

@value backdropInOpacity: 1;
@value backdropOutOpacity: 0;
@value backdropAnimationDuration: 300ms;

@value dialogInTransform: scale3d(1, 1, 1);
@value dialogOutTransform: scale3d(0.8, 0.8, 0.8);
@value dialogInOpacity: 1;
@value dialogOutOpacity: 0;
@value dialogAnimationDuration: 300ms;

@value enterTimingFunction: cubic-bezier(0.4, 0, 0, 1);
@value exitTimingFunction: cubic-bezier(0.76, 0.18, 0.4, 0.92);

@keyframes backdropEnter {
  from {
    opacity: backdropOutOpacity;
  }
  to {
    opacity: backdropInOpacity;
  }
}

@keyframes backdropLeave {
  from {
    opacity: backdropInOpacity;
  }
  to {
    opacity: backdropOutOpacity;
  }
}

@keyframes dialogEnter {
  from {
    transform: dialogOutTransform;
    opacity: dialogOutOpacity;
  }
  to {
    transform: dialogInTransform;
    opacity: dialogInOpacity;
  }
}

@keyframes dialogLeave {
  from {
    transform: dialogInTransform;
    opacity: dialogInOpacity;
  }
  to {
    transform: dialogOutTransform;
    opacity: dialogOutOpacity;
  }
}

/********************************************************
  Shared set of properties for both the tinted backdrop
  and the full screen container that holds a dialog
********************************************************/
.fullscreenOverlay {
  display: flex;
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: critical;
  overflow: hidden;
  overscroll-behavior: none;
}

/**********************************
  Tinted backdrop (behind dialog)
***********************************/
.backdrop {
  composes: fullscreenOverlay;
  background-color: backdropColor;
  will-change: opacity;
}

.backdrop.enter {
  animation-name: backdropEnter;
  animation-duration: backdropAnimationDuration;
  animation-timing-function: enterTimingFunction;
}

.backdrop.exit {
  animation-name: backdropLeave;
  animation-duration: backdropAnimationDuration;
  animation-timing-function: exitTimingFunction;
}

.backdrop.enterActive,
.backdrop.enterDone {
  opacity: backdropInOpacity;
}

.backdrop.exitActive,
.backdrop.exitDone {
  opacity: backdropOutOpacity;
}

.backdropBlurEffect {
  transition: filter backdropAnimationDuration enterTimingFunction;
  filter: blurEffect;
}

/************************************************
  Modal dialog and associated layout container
************************************************/
.dialogWrapper {
  composes: fullscreenOverlay;
  justify-content: center;
  align-items: center;
}

.dialogSizer {
  display: grid;
  margin: 0 64px;
}

.dialog {
  position: relative;
  border-radius: 8px;
  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  max-height: calc(100% - 64px);
  min-height: 320px;
  will-change: transform, opacity;
}

@media belowMobileSize {
  .dialog {
    max-height: calc(100% - 32px);
    margin: 0 24px;
  }
}

/* for large screens, place an eventual cap on the height of a modal */
@media screen and (min-height: 1164px) {
  .dialog {
    max-height: 1100px;
  }
}

.dialogWrapper.enter {
  .dialog {
    animation-name: dialogEnter;
    animation-duration: dialogAnimationDuration;
    animation-timing-function: enterTimingFunction;
  }
}

.dialogWrapper.exit {
  .dialog {
    animation-name: dialogLeave;
    animation-duration: dialogAnimationDuration;
    animation-timing-function: exitTimingFunction;
  }
}

.dialogWrapper.enterActive,
.dialogWrapper.enterDone {
  .dialog {
    transform: dialogInTransform;
    opacity: dialogInOpacity;
  }
}

.dialogWrapper.exitActive,
.dialogWrapper.exitDone {
  .dialog {
    transform: dialogOutTransform;
    opacity: dialogOutOpacity;
  }
}
